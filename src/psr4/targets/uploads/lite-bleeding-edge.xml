<?xml version="1.0" encoding="UTF-8" ?>

<project>

  <!-- ============================================  -->
  <!-- Upload lite bleeding edge distros. -->
  <!-- ============================================  -->

  <target name="-uploads-lite-bleeding-edge" depends="-validations-existing-lite-build" hidden="true">

    <!-- Convey what is about to happen below. -->

    <echo msg="Uploading lite distros to Amazon S3/CloudFront storage ..." />

    <!-- Obfuscate the project sub-path for more secure S3 storage. -->

    <adHocAwsS3ObfuscateSubPath base="software/bleeding-edge" slug="${project_lite_slug}" returnProperty="_uploads_lite_bleeding_edge_sub_path" />

    <!-- Upload distros as bleeding edge packages to assist with testing. -->

    <forEach list="zip,tar.gz,phar" delimiter="," target="--uploads-lite-bleeding-edge-extension" param="__uploads_lite_bleeding_edge_extension" />

    <!-- Also upload a `${project_lite_slug}/version.txt` file we can query. -->

    <phingCall target="--uploads-lite-bleeding-edge-version" />

  </target>

  <!-- This target is used by the foreach loop above to reduce the amount of code we need to maintain. -->

  <target name="--uploads-lite-bleeding-edge-extension" hidden="true">
    <if>
      <and>
        <available resource="${project.basedir}/.~build/${project_lite_slug}/.~build/${project_lite_slug}.${__uploads_lite_bleeding_edge_extension}" type="file" />
      </and>
      <then>
        <!-- Determine the MIME type based on the extension. -->

        <if>
          <equals arg1="${__uploads_lite_bleeding_edge_extension}" arg2="zip" />
          <then>
            <property name="__uploads_lite_bleeding_edge_mime_type" value="application/zip" />
          </then>
          <elseif>
            <equals arg1="${__uploads_lite_bleeding_edge_extension}" arg2="tar.gz" />
            <then>
              <property name="__uploads_lite_bleeding_edge_mime_type" value="application/gzip" />
            </then>
          </elseif>
          <elseif>
            <equals arg1="${__uploads_lite_bleeding_edge_extension}" arg2="phar" />
            <then>
              <property name="__uploads_lite_bleeding_edge_mime_type" value="application/x-phar" />
            </then>
          </elseif>
          <else>
            <fail msg="Unexpected file extension: ${__uploads_lite_bleeding_edge_extension}" />
          </else>
        </if>
        <!-- Upload a bleeding edge distro based on extension and MIME type. -->

        <exec executable="aws" passthru="true" checkReturn="true">
          <arg value="--profile" />
          <arg value="websharks" />

          <arg value="s3" />
          <arg value="cp" />

          <arg value="${project.basedir}/.~build/${project_lite_slug}/.~build/${project_lite_slug}.${__uploads_lite_bleeding_edge_extension}" />
          <arg value="s3://${_aws_bucket}/cloudfront/${_uploads_lite_bleeding_edge_sub_path}.${__uploads_lite_bleeding_edge_extension}" />

          <arg value="--metadata" />
          <arg value="version=${project_version}" />

          <arg value="--content-type" />
          <arg value="${__uploads_lite_bleeding_edge_mime_type}" />

          <arg value="--content-disposition" />
          <arg value='attachment; filename="${project_lite_slug}.bleeding-edge.${__uploads_lite_bleeding_edge_extension}"' />
        </exec>
        <echo msg="https://${_aws_bucket_cname}/${_uploads_lite_bleeding_edge_sub_path}.${__uploads_lite_bleeding_edge_extension}" />

        <echo msg="${line.separator}" file="${_tmp_sub_dir}/${project_slug}-bleeding-edge-urls" append="true" />
        <echo msg="https://${_aws_bucket_cname}/${_uploads_lite_bleeding_edge_sub_path}.${__uploads_lite_bleeding_edge_extension}" file="${_tmp_sub_dir}/${project_slug}-bleeding-edge-urls" append="true" />
      </then>

      <else>
        <echo msg="Distro with extension `.${__uploads_lite_bleeding_edge_extension}` does not exist. Bypassing." />
      </else>
    </if>
  </target>

  <!-- Uploads a `${project_lite_slug}/version.txt` file we can query. -->

  <target name="--uploads-lite-bleeding-edge-version" hidden="true">
    <exec executable="aws" passthru="true" checkReturn="true">
      <arg value="--profile" />
      <arg value="websharks" />

      <arg value="s3" />
      <arg value="cp" />

      <arg value="${project.basedir}/.~build/${project_lite_slug}/.~build/.~/properties/project-version" />
      <arg value="s3://${_aws_bucket}/cloudfront/software/bleeding-edge/${project_lite_slug}/version.txt" />

      <arg value="--metadata" />
      <arg value="version=${project_version}" />

      <arg value="--content-type" />
      <arg value="text/plain; charset=utf-8" />
    </exec>
    <echo msg="https://${_aws_bucket_cname}/software/bleeding-edge/${project_lite_slug}/version.txt" />

    <echo msg="${line.separator}" file="${_tmp_sub_dir}/${project_slug}-bleeding-edge-urls" append="true" />
    <echo msg="https://${_aws_bucket_cname}/software/bleeding-edge/${project_lite_slug}/version.txt${line.separator}" file="${_tmp_sub_dir}/${project_slug}-bleeding-edge-urls" append="true" />
  </target>

</project>
