<?xml version="1.0" encoding="UTF-8" ?>

  <project name="lite">

    <!-- ============================================  -->
    <!-- Lite generation. -->
    <!-- ============================================  -->

    <target name="-lite" hidden="true">

      <if>
        <and>
          <not>
            <isset property="is_lite" />
          </not>
          <istrue value="${_is_lite_applicable}" />
        </and>
        <then>
          <!-- Prepare for lite generation. -->

          <echo msg="Deleting previous: ${project.basedir}/.~build/${project_lite_slug}" />

          <delete dir="${project.basedir}/.~build/${project_lite_slug}" includeemptydirs="true" quiet="true" />

          <echo msg="Creating: ${project.basedir}/.~build/${project_lite_slug}" />

          <copy todir="${project.basedir}/.~build/${project_lite_slug}">
            <fileset dir="${project.basedir}">
              <exclude pattern=".~build/**" />
            </fileset>
          </copy>

          <echo msg="------------------------------------" />

          <!-- WordPress plugin file rename. -->

          <if>
            <and>
              <istrue value="${_is_wp_theme_plugin}" />
              <available file="${project.basedir}/.~build/${project_lite_slug}/${project_slug}.php" />
            </and>
            <then>
              <echo msg="Renaming: ${project.basedir}/.~build/${project_lite_slug}/${project_slug}.php" />

              <move file="${project.basedir}/.~build/${project_lite_slug}/${project_slug}.php" tofile="${project.basedir}/.~build/${project_lite_slug}/${project_lite_slug}.php" />

              <echo msg="------------------------------------" />
            </then>
            <else>
              <echo msg="N/A: skipping WP plugin file rename in lite variation." />

              <echo msg="------------------------------------" />
            </else>
          </if>

          <!-- WordPress token replacements. -->

          <if>
            <and>
              <istrue value="${_is_wp_theme_plugin}" />
            </and>
            <then>
              <echo msg="Replacing WP headers in: ${project.basedir}/.~build/${project_lite_slug}" />

              <reflexive>
                <fileset dir="${project.basedir}/.~build/${project_lite_slug}" casesensitive="false">
                  <include pattern="readme.txt" />
                  <include pattern="plugin.php" />
                  <include pattern="${project_lite_slug}.php" />
                  <include pattern="uninstall.php" />
                  <include pattern="functions.php" />
                  <include pattern="style.css" />
                </fileset>
                <filterchain>
                  <replaceregexp>
                    <regexp pattern="^\=\=\=.+?\=\=\=\n" replace="=== ${project_lite_title} ===${line.separator}" />
                    <regexp pattern="^Theme Name\:.+$" replace="Theme Name: ${project_lite_title}" modifiers="m" />
                    <regexp pattern="^Plugin Name\:.+$" replace="Plugin Name: ${project_lite_title}" modifiers="m" />
                  </replaceregexp>
                </filterchain>
              </reflexive>

              <echo msg="------------------------------------" />
            </then>
            <else>
              <echo msg="N/A: skipping WP headers in lite variation." />

              <echo msg="------------------------------------" />
            </else>
          </if>

          <!-- Other token replacements. -->

          <echo msg="Replacing other tokens in: ${project.basedir}/.~build/${project_lite_slug}" />

          <reflexive>
            <fileset dir="${project.basedir}/.~build/${project_lite_slug}" casesensitive="false">
              <include pattern="readme.md" />
            </fileset>
            <filterchain>
              <replaceregexp>
                <regexp pattern="^##.+?\n" replace="## ${project_lite_title}${line.separator}" />
              </replaceregexp>
            </filterchain>
          </reflexive>

          <echo msg="------------------------------------" />

          <!-- Namespace replacements. -->

          <echo msg="Changing namespace in: ${project.basedir}/.~build/${project_lite_slug}" />

          <reflexive>
            <fileset dir="${project.basedir}/.~build/${project_lite_slug}" casesensitive="false">
              <exclude pattern="src/vendor/**" />
            </fileset>
            <filterchain>
              <replaceregexp>
                <regexp pattern="\b(namespace|use)\s+${project_ns}\b" replace="\1 ${project_lite_ns}" />
              </replaceregexp>
            </filterchain>
          </reflexive>

          <echo msg="------------------------------------" />

          <!-- Composer replacements. -->

          <if>
            <and>
              <available file="${project.basedir}/.~build/${project_lite_slug}/composer.json" />
            </and>
            <then>
              <echo msg="Modifying composer.json: ${project.basedir}/.~build/${project_lite_slug}/composer.json" />

              <php expression="addslashes(addslashes('${project_ns}'))" returnproperty="_project_ns_slashes" />
              <php expression="addslashes(addslashes('${project_lite_ns}'))" returnproperty="_project_lite_ns_slashes" />

              <reflexive>
                <fileset dir="${project.basedir}/.~build/${project_lite_slug}" casesensitive="false">
                  <include pattern="composer.json" />
                </fileset>
                <filterchain>
                  <replaceregexp>
                    <regexp pattern="\b${project_slug}\b" replace="${project_lite_slug}" />
                    <regexp pattern="&quot;${_project_ns_slashes}\\\\&quot;" replace="&quot;${_project_lite_ns_slashes}\\\\&quot;" />
                  </replaceregexp>
                </filterchain>
              </reflexive>

              <echo msg="------------------------------------" />
            </then>
            <else>
              <echo msg="N/A: skipping; composer.json does not exist in lite variation." />

              <echo msg="------------------------------------" />
            </else>
          </if>

          <!-- Strip pro tokens. -->

          <echo msg="Stripping pro tokens from: ${project.basedir}/.~build/${project_lite_slug}" />

          <reflexive>
            <fileset dir="${project.basedir}/.~build/${project_lite_slug}" casesensitive="false">
              <exclude pattern="src/vendor/**" />
            </fileset>
            <filterchain>
              <replaceregexp>
                <regexp pattern="\/\*\!\[pro strip\-from\=['&quot;]lite['&quot;]\]\*\/(?:.*?)\/\*\!\[\/pro\]\*\/" replace="" modifiers="s" />
                <regexp pattern="\/\*\[pro strip\-from\=['&quot;]lite['&quot;]\]\*\/(?:.*?)\/\*\[\/pro\]\*\/" replace="" modifiers="s" />
              </replaceregexp>
            </filterchain>
          </reflexive>

          <echo msg="------------------------------------" />

          <!-- Modify build properties. -->

          <echo msg="Modifying lite build properties: ${project.basedir}/.~build/${project_lite_slug}/.build.properties" />

          <reflexive>
            <fileset dir="${project.basedir}/.~build/${project_lite_slug}" casesensitive="false">
              <include pattern=".build.properties" />
            </fileset>
            <filterchain>
              <replaceregexp>
                <regexp pattern="^project_title\s+.*$" replace="" modifiers="m" />
                <regexp pattern="^project_slug\s+.*$" replace="" modifiers="m" />

                <regexp pattern="^project_ns\s+.*$" replace="" modifiers="m" />
                <regexp pattern="^project_sns\s+.*$" replace="" modifiers="m" />

                <regexp pattern="^project_lite_title(\s+)" replace="project_title\1" modifiers="m" />
                <regexp pattern="^project_lite_slug(\s+)" replace="project_slug\1" modifiers="m" />

                <regexp pattern="^project_lite_ns(\s+)" replace="project_ns\1" modifiers="m" />
                <regexp pattern="^project_lite_sns(\s+)" replace="project_sns\1" modifiers="m" />
              </replaceregexp>
            </filterchain>
          </reflexive>

          <echo msg="------------------------------------" />

          <!-- Build lite variation now. -->

          <echo msg="Building lite variation from: ${project.basedir}/.~build/${project_lite_slug}/build.xml" />

          <phing phingfile="${project.basedir}/.~build/${project_lite_slug}/build.xml" inheritall="false" inheritrefs="false" haltonfailure="true">
            <property name="is_lite" value="true" />
          </phing>

        </then>

        <else>
          <echo msg="N/A: skipping lite variation sub-routines." />

          <echo msg="------------------------------------" />
        </else>
      </if>

    </target>

  </project>
