<?xml version="1.0" encoding="UTF-8" ?>

<project>

  <!-- ============================================  -->
  <!-- Package generation. -->
  <!-- ============================================  -->

  <target name="-distros-packages" hidden="true">

    <!-- Build the ZIP/TGZ directory for archiving below (with default FS permissions). -->
    <!-- â†“ Preserve executable bit on binaries that are set as world-executable. -->
    <if>
      <and>
        <available resource="${project.basedir}/.~build/.~/pkg-dirs/for-zip-tgz/${project_slug}" type="dir" />
      </and>
      <then>
        <delete dir="${project.basedir}/.~build/.~/pkg-dirs/for-zip-tgz/${project_slug}" includeEmptyDirs="true" quiet="true" />
      </then>
    </if>

    <copy toDir="${project.basedir}/.~build/.~/pkg-dirs/for-zip-tgz/${project_slug}">
      <fileSet dir="${project.basedir}/.~build/${project_slug}" caseSensitive="false" defaultExcludes="false" excludes="${project_other_zip_tgz_fileset_exclusions}">
        <patternSet refId="_git_export_ignore_pattern_set" />
        <patternSet refId="_zip_tgz_pattern_set" />
      </fileSet>
    </copy>

    <exec command="find ${project.basedir}/.~build/${project_slug} -type d -exec chmod 755 {} \;" checkReturn="true" />
    <exec command="find ${project.basedir}/.~build/${project_slug} -type f ! -perm -u=x,g=x,o=x -exec chmod 644 {} \;" checkReturn="true" />
    <exec command="find ${project.basedir}/.~build/${project_slug} -type f -perm -u=x,g=x,o=x -exec chmod 755 {} \;" checkReturn="true" />

    <!-- ZIP file generation with permissions preserved. -->

    <echo />

    <if>
      <and>
        <available resource="${project.basedir}/.~build/${project_slug}.zip" type="file" />
      </and>
      <then>
        <delete file="${project.basedir}/.~build/${project_slug}.zip" quiet="true" />
      </then>
    </if>

    <echo msg="Packaging ZIP: ${project.basedir}/.~build/${project_slug}.zip" />
    <echo msg="Based on: ${project.basedir}/.~build/.~/pkg-dirs/for-zip-tgz/${project_slug}" />

    <exec executable="zip" dir="${project.basedir}/.~build/.~/pkg-dirs/for-zip-tgz" checkReturn="true">
      <arg value="--no-extra" />
      <arg value="--recurse-paths" />
      <arg value="${project.basedir}/.~build/${project_slug}.zip" />
      <arg value="${project_slug}" />
    </exec>

    <!-- TGZ file generation with permissions preserved. -->

    <echo />

    <if>
      <and>
        <available resource="${project.basedir}/.~build/${project_slug}.tar.gz" type="file" />
      </and>
      <then>
        <delete file="${project.basedir}/.~build/${project_slug}.tar.gz" quiet="true" />
      </then>
    </if>

    <echo msg="Packaging TGZ: ${project.basedir}/.~build/${project_slug}.tar.gz" />
    <echo msg="Based on: ${project.basedir}/.~build/.~/pkg-dirs/for-zip-tgz/${project_slug}" />

    <exec executable="tar" dir="${project.basedir}/.~build/.~/pkg-dirs/for-zip-tgz" checkReturn="true">
      <arg value="--create" />
      <arg value="--gzip" />
      <arg value="--file" />
      <arg value="${project.basedir}/.~build/${project_slug}.tar.gz" />
      <arg value="${project_slug}" />
    </exec>

    <!-- PHAR file generation. -->

    <if>
      <and>
        <available resource="${project.basedir}/.~build/${project_slug}/src/includes/phar-stub.php" type="file" />
      </and>
      <then>
        <echo />

        <delete file="${project.basedir}/.~build/${project_slug}.phar" quiet="true" />

        <pharPackage baseDir="${project.basedir}/.~build/${project_slug}" stub="${project.basedir}/.~build/${project_slug}/src/includes/phar-stub.php" destFile="${project.basedir}/.~build/${project_slug}.phar">
          <fileSet dir="${project.basedir}/.~build/${project_slug}" caseSensitive="false" defaultExcludes="false" excludes="${project_other_phar_fileset_exclusions}">
            <patternSet refId="_git_export_ignore_pattern_set" />
            <patternSet refId="_phar_pattern_set" />
          </fileSet>
        </pharPackage>

        <chmod file="${project.basedir}/.~build/${project_slug}.phar" mode="0744" />
      </then>
    </if>

  </target>

</project>
